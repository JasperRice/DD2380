# C++ skeleton for duck hunt dd2380

# Compile
g++ -std=c++11 *pp

# Run
# The agent can be run in two different modes:
# 2. Server - act as the judge by sending predefined observations one at a time
#    and asking the client to respond
# 3. Client - get observations from standard input and output actions to
#    standard output (this is the default mode)

# The server and client can be run in separate terminals and communicate
# through pipes. Create the pipes first (we recommend Cygwin for Windows users).
mkfifo player2server server2player

# Terminal 1:
./main verbose server < player2server > server2player

# Terminal 2:
./main verbose > /tmp/player2server < /tmp/server2player

# Or you may run both instances in the same terminal.
./main server < /tmp/player2server | ./main verbose > /tmp/player2server

# You can test a different environment like this (if you do not want to make changes inside the program).
./main server load ParadiseEmissions.in < player2server | java Main verbose > player2server



# To compile:
g++ -std=c++11 *pp -g -o duckhunt

# Make fifos
mkfifo /tmp/player2server /tmp/server2player

# Terminal 1 - server
./main verbose server < /tmp/player2server > /tmp/server2player
# Terminal 2 - debug
gdb --args ./main
    # Set breakpoint
    break ducks::Player::shoot
    # run
    run verbose > /tmp/player2server < /tmp/server2player
